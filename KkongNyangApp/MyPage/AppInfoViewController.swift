//
//  AppInfoViewController.swift
//  KkongNyangApp
//
//  Created by Doy Kim on 2022/05/22.
//

import UIKit
import SafariServices
import AcknowList
import MessageUI


class AppInfoViewController: UIViewController {

    
    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        //print("\(self.getCurrentVersion())")


    }

    override func viewWillAppear(_ animated: Bool) {
        self.navigationController?.setNavigationBarHidden(true, animated: false)

    }
    
    // MARK: - Action
    
    @IBAction func didBackButtonTapped(_ sender: UIButton) {

        self.navigationController?.popViewController(animated: true)
        viewWillAppear(true)

    }
    
    // Ïù¥Ïö©ÏïΩÍ¥Ä
    @IBAction func didTermsOfServiceButtonTapped(_ sender: UIButton) {
        
        guard let url = URL(string: "https://kimdee.notion.site/5bf0498b615749e683e7678aea3fe720") else { return }
        let svc = SFSafariViewController(url: url)
        present(svc, animated: true, completion: nil)
    }
    
    // Ïò§ÌîàÏÜåÏä§ ÎùºÏù¥ÏÑ†Ïä§
    @IBAction func didOpenSourceLicenseButtonTapped(_ sender: UIButton) {
        
        let acknowList = AcknowListViewController(fileNamed: "Pods-KkongNyangApp-acknowledgements")
        self.navigationController?.pushViewController(acknowList, animated: true)
        self.navigationController?.setNavigationBarHidden(false, animated: true)

        
    }
    
    // Í∞úÏù∏Ï†ïÎ≥¥Ï≤òÎ¶¨Î∞©Ïπ®
    @IBAction func didPrivacyPolicyButtonTapped(_ sender: UIButton) {
        guard let url = URL(string: "https://kimdee.notion.site/26c37dff0def4e9197f2b6c3d82e7c00") else { return }
        let svc = SFSafariViewController(url: url)
        present(svc, animated: true, completion: nil)
    }
    
    @IBAction func didAppFeedbackButtonTapped(_ sender: UIButton) {
        
        // Ïù¥Î©îÏùºÏ∞ΩÏù¥ ÎÇòÌÉÄÎÇòÎäî Ïª®Ìä∏Î°§Îü¨
        guard MFMailComposeViewController.canSendMail() else {
            // ÏÇ¨Ïö©ÏûêÏùò Î©îÏùº Í≥ÑÏ†ïÏù¥ ÏÑ§Ï†ïÎêòÏñ¥ ÏûàÏßÄ ÏïäÏïÑ Î©îÏùºÏùÑ Î≥¥ÎÇº Ïàò ÏóÜÎã§Îäî Í≤ΩÍ≥† Î©îÏãúÏßÄ Ï∂îÍ∞Ä
            print("Î©îÏùº Î≥¥ÎÇ¥Í∏∞ Ïã§Ìå®")
            let sendMailErrorAlert = UIAlertController(title: "Î©îÏùº Ï†ÑÏÜ° Ïã§Ìå®", message: "Î©îÏùºÏùÑ Î≥¥ÎÇ¥Î†§Î©¥ 'Mail' Ïï±Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§. App StoreÏóêÏÑú Ìï¥Îãπ Ïï±ÏùÑ Î≥µÏõêÌïòÍ±∞ÎÇò Ïù¥Î©îÏùº ÏÑ§Ï†ïÏùÑ ÌôïÏù∏ÌïòÍ≥† Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.", preferredStyle: .alert)
            let goAppStoreAction = UIAlertAction(title: "App StoreÎ°ú Ïù¥ÎèôÌïòÍ∏∞", style: .default) { _ in
                // Ïï±Ïä§ÌÜ†Ïñ¥Î°ú Ïù¥ÎèôÌïòÍ∏∞(Mail)
                if let url = URL(string: "https://apps.apple.com/kr/app/mail/id1108187098"), UIApplication.shared.canOpenURL(url) {
                    if #available(iOS 10.0, *) {
                        UIApplication.shared.open(url, options: [:], completionHandler: nil)
                    } else {
                        UIApplication.shared.openURL(url)
                    }
                }
            }
            let cancleAction = UIAlertAction(title: "Ï∑®ÏÜå", style: .destructive, handler: nil)
            
            sendMailErrorAlert.addAction(goAppStoreAction)
            sendMailErrorAlert.addAction(cancleAction)
            self.present(sendMailErrorAlert, animated: true, completion: nil)
            return
        }
        
        
        let emailTitle = "[ÍΩÅÎÉ•]" // Î©îÏùº Ï†úÎ™©
                let messageBody =
                """
                üìå OS Version: \(UIDevice.current.systemVersion)
                üìå Device:   \(UIDevice().type)
                üìå App Version: \(self.getCurrentVersion())
                ----------------------------------------
                üìå ÎÇ¥Ïö©:
                ÍΩÅÎÉ• Ïï± Î¨∏Ïùò, Î≤ÑÍ∑∏ Ïã†Í≥†, ÌîºÎìúÎ∞± ÎÇ¥Ïö©Ïóê ÎåÄÌï¥ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.
                Ïä§ÌÅ¨Î¶∞ÏÉ∑ÏùÑ Ìï®Íªò Ï≤®Î∂ÄÌï¥Ï£ºÏãúÎ©¥ ÎèÑÏõÄÏù¥ Îê©ÎãàÎã§. üôá‚Äç‚ôÇÔ∏è
                
                
                """
        // 3
              let toRecipents = ["kimdee.dev@gmail.com"]
              let mc: MFMailComposeViewController = MFMailComposeViewController()
              mc.mailComposeDelegate = self
              mc.setSubject(emailTitle)
              mc.setMessageBody(messageBody, isHTML: false)
              mc.setToRecipients(toRecipents)
              
              self.present(mc, animated: true, completion: nil)
          }
          
          // 4
          @objc(mailComposeController:didFinishWithResult:error:)
          func mailComposeController(_ controller: MFMailComposeViewController, didFinishWith result: MFMailComposeResult,error: Error?) {
                  controller.dismiss(animated: true)
          }
    
    // MARK: - Helpers
    // ÌòÑÏû¨ Î≤ÑÏ†Ñ Í∞ÄÏ†∏Ïò§Í∏∞
    func getCurrentVersion() -> String {
        guard let dictionary = Bundle.main.infoDictionary,
              let version = dictionary["CFBundleShortVersionString"] as? String else { return "" }
        return version
    }
    

    
}


// MARK: - Extensions
// Î©îÏùº Ïó∞Í≤∞
extension AppInfoViewController: MFMailComposeViewControllerDelegate {
}


